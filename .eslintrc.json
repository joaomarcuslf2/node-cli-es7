{
  "parser": "babel-eslint",
  "plugins": [
    "flowtype"
  ],
  "rules": {
    "no-case-declarations": "warn",
    "no-console": "off",
    "max-len": "off",
    "new-cap": "off",
    "quote-props": ["error", "as-needed"],
    "object-curly-spacing": ["error", "always"],
    "arrow-parens": ["error", "as-needed"],
    "keyword-spacing": ["error", {
      "before": true,
      "after": true
    }],
    "no-multiple-empty-lines": ["error", {
      "max": 1,
      "maxBOF": 1,
      "maxEOF": 1
    }],
    "valid-jsdoc": "error",
    "require-jsdoc": ["error", {
        "require": {
            "FunctionDeclaration": true,
            "MethodDefinition": false,
            "ClassDeclaration": false,
            "ArrowFunctionExpression": true
        }
    }],

    // Flow

    "flowtype/boolean-style":                  [ "error",  "boolean" ],
    "flowtype/define-flow-type":                 "error",
    "flowtype/delimiter-dangle":               [ "error", "never" ],
    "flowtype/generic-spacing":                [ "error", "never" ],
    "flowtype/no-primitive-constructor-types":   "error",
    "flowtype/no-types-missing-file-annotation": "error",
    "flowtype/no-weak-types":                    "error",
    "flowtype/object-type-delimiter":          [ "error", "comma" ],
    "flowtype/require-parameter-type":           "error",
    "flowtype/require-return-type":            [ "error", "always", { "annotateUndefined": "never" } ],
    "flowtype/require-valid-file-annotation":    "error",
    "flowtype/semi":                           [ "error", "always" ],
    "flowtype/space-after-type-colon":         [ "error", "always" ],
    "flowtype/space-before-generic-bracket":   [ "error", "never" ],
    "flowtype/space-before-type-colon":        [ "error", "never" ],
    "flowtype/type-id-match":                  [ "error", "^([A-Z][a-z0-9]+)+Type$" ],
    "flowtype/union-intersection-spacing":     [ "error", "always" ],
    "flowtype/use-flow-type":                    "error",
    "flowtype/valid-syntax":                     "error"
  },
  "settings": {
    "flowtype": {
      "onlyFilesWithFlowAnnotation": false
    }
  }
}
